[{"/home/stranger/task-github-api/src/index.js":"1","/home/stranger/task-github-api/src/App.js":"2","/home/stranger/task-github-api/src/reportWebVitals.js":"3","/home/stranger/task-github-api/src/components/MainComponent.js":"4","/home/stranger/task-github-api/src/components/SearchBar.js":"5","/home/stranger/task-github-api/src/components/UserInfoCard.js":"6","/home/stranger/task-github-api/src/components/LocalStorage.js":"7"},{"size":500,"mtime":1608833310435,"results":"8","hashOfConfig":"9"},{"size":290,"mtime":1608835268785,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608833310435,"results":"11","hashOfConfig":"9"},{"size":2000,"mtime":1608960324878,"results":"12","hashOfConfig":"9"},{"size":563,"mtime":1608837033907,"results":"13","hashOfConfig":"9"},{"size":489,"mtime":1608889058730,"results":"14","hashOfConfig":"9"},{"size":1055,"mtime":1608901237962,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"f806v5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/stranger/task-github-api/src/index.js",[],["33","34"],"/home/stranger/task-github-api/src/App.js",[],"/home/stranger/task-github-api/src/reportWebVitals.js",[],"/home/stranger/task-github-api/src/components/MainComponent.js",["35","36","37","38"],"/home/stranger/task-github-api/src/components/SearchBar.js",[],"/home/stranger/task-github-api/src/components/UserInfoCard.js",["39"],"import React from \"react\";\n\nfunction UserInfoCard({userData}){\n    return(\n        <div className = \"datacontainer\">\n            {userData.avatar_url ? (<div className=\"dataitem\"><img src={userData.avatar_url} /></div>):(<div></div>)}\n            {userData.name ? (<div className=\"dataitem\">Name : {userData.name}</div>):(<div></div>)}\n            {userData.blog ? (<div className=\"dataitem\">Blog: {userData.blog}</div>):(<div></div>)}\n        </div>\n    );\n}\n\nexport default UserInfoCard;","/home/stranger/task-github-api/src/components/LocalStorage.js",["40"],"import React from \"react\";\n\nfunction LocalStorage({storedData,setStoredData}){\n    // console.log(storedData)\n    var items = [];\n    Object.entries(storedData).forEach((entry) => {\n        const [key,val] = entry;\n        // console.log(key);\n        items.push(\n            <div>\n                {val.avatar_url ? (<div className=\"localitem\"><div className= \"imgcontainer\"><img src={val.avatar_url} />\n                <button className=\"btn\" onClick={()=>{\n                    delete storedData[key];\n                    localStorage.setItem(\"sD\",JSON.stringify(storedData))\n                    alert(`User ${key} removed from Local Storage.`)\n                    setStoredData(JSON.parse(localStorage.getItem(\"sD\")))\n                }}>X\n                </button>\n                </div></div>):(<div></div>)}\n                {val.name ? (<div className=\"localitem\">{val.name}</div>):(<div></div>)}\n            </div>\n    )\n    }\n        \n    )\n    return(\n        <div className = \"localcontainer\">{items}</div>\n    );\n\n\n}\n\nexport default LocalStorage;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":37,"nodeType":"47","messageId":"48","endLine":1,"endColumn":43},{"ruleId":"49","severity":1,"message":"50","line":9,"column":46,"nodeType":"51","messageId":"52","endLine":9,"endColumn":58},{"ruleId":"53","severity":1,"message":"54","line":20,"column":8,"nodeType":"55","endLine":20,"endColumn":18,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":29,"column":8,"nodeType":"55","endLine":29,"endColumn":18,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":63,"nodeType":"61","endLine":6,"endColumn":96},{"ruleId":"59","severity":1,"message":"60","line":11,"column":94,"nodeType":"61","endLine":11,"endColumn":122},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook useEffect has a missing dependency: 'storedData'. Either include it or remove the dependency array.",["65"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [getUserData, username]",{"range":"70","text":"71"},"Update the dependencies array to be: [storedData, userData]",{"range":"72","text":"73"},[724,734],"[getUserData, username]",[1140,1150],"[storedData, userData]"]